# In this script, an autokeras model is visualized using the methods as proposed by the Auto-Keras team
# Because this is not a Keras model (due to the automated preprocessing),
# only specific autokeras methods can be used.

# first, do the needed installations on the system:
# sudo apt-get install libcairo2-dev
# sudo apt-get install libpango1.0-dev
# Install Graphviz:
# tar -xzf graphviz.tar.gz
# cd graphviz-2.40.1
# ./configure
# make
# sudo make install
# python3 -m pip install graphviz
# python3 -m pip install autokeras

# note that all models get visualized, but you only need to check to best
# one, as specified in the file best_model.txt

# import packages
import os
from graphviz import Digraph

from autokeras.utils import pickle_from_file


def to_pdf(graph, path):
    """ a function to write our model to a pdf file. This is just a copy of the proposed method online."""
    dot = Digraph(comment='The Round Table')

    for index, node in enumerate(graph.node_list):
        dot.node(str(index), str(node.shape))

    for u in range(graph.n_nodes):
        for v, layer_id in graph.adj_list[u]:
            dot.edge(str(u), str(v), str(graph.layer_list[layer_id]))

    dot.render(path)


def visualize(path):
    """ visualize the model that is defined in the automodels folder lying above:
    that is the folder as generated by Auto-Keras in which it drops its (temporary) models"""
    cnn_module = pickle_from_file(os.path.join(path, 'module'))
    cnn_module.searcher.path = path
    for item in cnn_module.searcher.history:
        model_id = item['model_id']
        graph = cnn_module.searcher.load_model_by_id(model_id)
        to_pdf(graph, os.path.join(path, str(model_id)))


if __name__ == '__main__':
    # here, the desired folder lying a level above is used
    # that is the folder as generated by Auto-Keras in which it drops its (temporary) models
    visualize('mnist_automodels/')    # FIX THIS
